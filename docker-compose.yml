services:
  product-web:
    image: nginx:alpine
    ports:
      - ${PRODUCT_API_PORT}:80
    volumes:
      - ./product-svc/:/var/www
      - ./product-svc/.docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - product-app
    networks:
      - product-network

  product-app:
    build:
      context: ./docker
    volumes:
      - ./product-svc:/var/www
    working_dir: /var/www
    depends_on:
      - product-db
    networks:
      - product-network

  product-db:
    image: mariadb:11.6.2
    restart: always
    ports:
      - ${PRODUCT_DB_PORT}:3306
    volumes:
      - ./product-svc/var/db:/var/lib/mysql:rw
    environment:
      MYSQL_DATABASE: ${PRODUCT_DB_NAME}
      MYSQL_USER: ${PRODUCT_DB_USER}
      MYSQL_PASSWORD: ${PRODUCT_DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ''
      MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
    networks:
      - product-network

  orders-web:
    image: nginx:alpine
    ports:
      - ${ORDERS_API_PORT}:80
    volumes:
      - ./orders-svc/:/var/www
      - ./orders-svc/docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - orders-app
    networks:
      - orders-network

  orders-app:
    build:
      context: ./docker
    volumes:
      - ./orders-svc:/var/www
    working_dir: /var/www
    depends_on:
      - orders-db
    networks:
      - orders-network

  orders-db:
    image: mariadb:11.6.2
    restart: always
    ports:
      - ${ORDERS_DB_PORT}:3306
    volumes:
      - ./orders-svc/var/db:/var/lib/mysql:rw
    environment:
      MYSQL_DATABASE: ${ORDERS_DB_NAME}
      MYSQL_USER: ${ORDERS_DB_USER}
      MYSQL_PASSWORD: ${ORDERS_DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ''
      MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
    networks:
      - orders-network

networks:
  product-network:
    driver: bridge
  orders-network:
    driver: bridge